import telebot
import time
import json
import os
import re
import random
import requests

from telebot import types
from datetime import datetime, date, timedelta


token = os.environ.get('bot_token')
remotely = os.environ.get('remotely')
remotely = int(remotely)
bot = telebot.TeleBot(str(token))
print('–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!')

days_count = ['1', '2', '3', '4', '5', '6', '7']

data_loads = json.load(open('./schedule.json'))
data = json.dumps(data_loads)
json_data = json.loads(data)

data_loads3 = json.load(open('./schedule_next_day.json'))
data3 = json.dumps(data_loads3)
json_data3 = json.loads(data3)


@bot.message_handler(commands = ['start'])
def start_command(message):
    str_countes = ''
    countes = [f'{message.from_user.id} ‚Äî ID,\n',
               f'{message.from_user.first_name} ‚Äî –∏–º—è,\n',
               f'{message.from_user.last_name} ‚Äî —Ñ–∞–º–∏–ª–∏—è,\n',
               f'{message.from_user.username} ‚Äî username.'
              ]
    for x in countes:
        str_countes += x
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard = True)
    button = types.KeyboardButton(text = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è")
    button1 = types.KeyboardButton(text = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞")
    button2 = types.KeyboardButton(text = "–û –Ω–∞—Å")
    button3 = types.KeyboardButton(text = "–ü–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
    keyboard.row(button, button1)
    keyboard.row(button2, button3)
    bot.send_message(655041562, f'–£ —Ç–µ–±—è +1 –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å! \n{str_countes}')
    bot.reply_to(message, "*–†–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å!* \n\n–ü—Ä–æ–ø–∏—à–∏ /schedule, –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –Ω–∏–∂–µ! –ï—Å–ª–∏ –≤–¥—Ä—É–≥ —Ç—ã –∑–∞–±–ª—É–¥–∏–ª—Å—è –∏–ª–∏ –∑–∞–±—ã–ª –∫–æ–º–∞–Ω–¥—ã (—Å–æ –≤—Å–µ–º–∏ –±—ã–≤–∞–µ—Ç, –Ω–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π) ‚Äî /help –≤ –ø–æ–º–æ—â—å.", parse_mode = 'Markdown', reply_markup = keyboard)
    


@bot.message_handler(commands = ['help'])
def send_help(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –†–∞–¥, —á—Ç–æ —Ç—ã –∑–∞–≥–ª—è–Ω—É–ª(–∞) —Å—é–¥–∞ \n‚Ä¢ /schedule ‚Äî —É–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ;"
                                                               "\n‚Ä¢ /schedule_next ‚Äî —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞;"
                                                               "\n‚Ä¢ /schedule [—Ü–∏—Ñ—Ä–∞] ‚Äî —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –¥–Ω—è –Ω–µ–¥–µ–ª–∏.")

@bot.message_handler(commands = ['schedule_full'])
def schedule_full(message):
    even_numbered_week = open('./Schedule/–ò–°–∏–ü-42. –ß—ë—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è.pdf', 'rb')
    odd_week = open('./Schedule/–ò–°–∏–ü-42. –ù–µ—á—ë—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è.pdf', 'rb')
    bot.send_message(message.chat.id, 'üìã –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ *—á—ë—Ç–Ω—É—é* –Ω–µ–¥–µ–ª—é:', parse_mode = 'Markdown')
    bot.send_document(message.chat.id, even_numbered_week)
    bot.send_message(message.chat.id, 'üìã –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ *–Ω–µ—á—ë—Ç–Ω—É—é* –Ω–µ–¥–µ–ª—é:', parse_mode = 'Markdown')
    bot.send_document(message.chat.id, odd_week)
    even_numbered_week.close()
    odd_week.close()
    
@bot.message_handler(commands = ['schedule'])
def schedule(message):
    if message.text == '/schedule':
        delta = timedelta(hours = 3)
        now = datetime.now() + delta
        days_int = now.isoweekday()
        
        sep = datetime(now.year if now.month >= 9 else now.year - 1, 9, 1)
        d1 = sep - timedelta(days = sep.weekday())
        d2 = now - timedelta(days = now.weekday())
        parity = ((d2 - d1).days // 7) % 2 #–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 0, –µ—Å–ª–∏ –Ω–µ–¥–µ–ª—è –Ω–µ—á—ë—Ç–Ω–∞—è –∏ 1, –µ—Å–ª–∏ —á—ë—Ç–Ω–∞—è
        
        if parity == 0:
            schedule_days_int = json_data["–î–ª—è –Ω–µ—á—ë—Ç–Ω–æ–π –Ω–µ–¥–µ–ª–∏"]
            schedule = ''
            for x in schedule_days_int:
                keys = schedule_days_int.get(str(days_int))
            nowtime = now.strftime("(%d.%m.%y)")
            schedule += str(keys)
            schedule = schedule.replace("['", '').replace("']", '').replace(r'\n', '\n').replace("', '", '').replace('()', nowtime)
            if remotely == 1:
                schedule = re.sub("–ê—É–¥–∏—Ç–æ—Ä–∏—è: \d\d\d", "–ê—É–¥–∏—Ç–æ—Ä–∏—è: –î–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ.", schedule)
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard = True)
            button = types.KeyboardButton(text = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è")
            button1 = types.KeyboardButton(text = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞")
            button2 = types.KeyboardButton(text = "–û –Ω–∞—Å")
            button3 = types.KeyboardButton(text = "–ü–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
            keyboard.row(button, button1)
            keyboard.row(button2, button3)
            bot.send_message(message.chat.id, schedule, parse_mode = 'Markdown', reply_markup = keyboard)
        else:
            schedule_days_int = json_data["–î–ª—è —á—ë—Ç–Ω–æ–π –Ω–µ–¥–µ–ª–∏"]
            schedule = ''
            for x in schedule_days_int:
                keys = schedule_days_int.get(str(days_int))
            nowtime = now.strftime("(%d.%m.%y)")
            schedule += str(keys)
            schedule = schedule.replace("['", '').replace("']", '').replace(r'\n', '\n').replace("', '", '').replace('()', nowtime)
            if remotely == 1:
                schedule = re.sub("\d\d\d", "–î–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ.", schedule)
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard = True)
            button = types.KeyboardButton(text = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è")
            button1 = types.KeyboardButton(text = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞")
            button2 = types.KeyboardButton(text = "–û –Ω–∞—Å")
            button3 = types.KeyboardButton(text = "–ü–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
            keyboard.row(button, button1)
            keyboard.row(button2, button3)
            bot.send_message(message.chat.id, schedule, parse_mode = 'Markdown', reply_markup = keyboard)
    else:
        try:
            delta = timedelta(hours = 3)
            now = datetime.now() + delta
            days_int = now.isoweekday()

            sep = datetime(now.year if now.month >= 9 else now.year - 1, 9, 1)
            d1 = sep - timedelta(days = sep.weekday())
            d2 = now - timedelta(days = now.weekday())
            parity = ((d2 - d1).days // 7) % 2 #–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 0, –µ—Å–ª–∏ –Ω–µ–¥–µ–ª—è –Ω–µ—á—ë—Ç–Ω–∞—è –∏ 1, –µ—Å–ª–∏ —á—ë—Ç–Ω–∞—è

            if parity == 0:
                schedule_days_int = json_data["–î–ª—è –Ω–µ—á—ë—Ç–Ω–æ–π –Ω–µ–¥–µ–ª–∏"]
                schedule = ''
                for x in schedule_days_int:
                    keys = schedule_days_int.get(message.text[10:])
                schedule += str(keys)
                schedule = schedule.replace("['", '').replace("']", '').replace(r'\n', '\n').replace("', '", '').replace('()', '–¥–ª—è —ç—Ç–æ–π –Ω–µ–¥–µ–ª–∏')
                keyboard = types.ReplyKeyboardMarkup(resize_keyboard = True)
                button = types.KeyboardButton(text = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è")
                button1 = types.KeyboardButton(text = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞")
                button2 = types.KeyboardButton(text = "–û –Ω–∞—Å")
                button3 = types.KeyboardButton(text = "–ü–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
                keyboard.row(button, button1)
                keyboard.row(button2, button3)
                bot.send_message(message.chat.id, schedule, parse_mode = 'Markdown', reply_markup = keyboard)
            else:
                schedule_days_int = json_data["–î–ª—è —á—ë—Ç–Ω–æ–π –Ω–µ–¥–µ–ª–∏"]
                schedule = ''
                for x in schedule_days_int:
                    keys = schedule_days_int.get(message.text[10:])
                schedule += str(keys)
                schedule = schedule.replace("['", '').replace("']", '').replace(r'\n', '\n').replace("', '", '').replace('()', '–¥–ª—è —ç—Ç–æ–π –Ω–µ–¥–µ–ª–∏')
                keyboard = types.ReplyKeyboardMarkup(resize_keyboard = True)
                button = types.KeyboardButton(text = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è")
                button1 = types.KeyboardButton(text = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞")
                button2 = types.KeyboardButton(text = "–û –Ω–∞—Å")
                button3 = types.KeyboardButton(text = "–ü–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
                keyboard.row(button, button1)
                keyboard.row(button2, button3)
                if schedule == '':
                    schedule = "–£–ø—Å, –Ω–æ —Ç—ã –≤–≤—ë–ª —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫."
                bot.send_message(message.chat.id, schedule, parse_mode = 'Markdown', reply_markup = keyboard)   
        except:
            bot.send_message(message.chat.id, '–¢–∞–∫. –¢—É—Ç —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫. \n–í–≤–µ–¥–∏ —á–∏—Å–ª–∞ (–æ—Ç 1 –¥–æ 7), –ª–∏–±–æ –æ–±—Ä–∞—Ç–∏—Å—å –∫ @whomet.')                
        
@bot.message_handler(commands = ['schedule_next'])
def schedule_next(message):
    delta = timedelta(hours = 3)
    delta1 = timedelta(days = 1)
    now = datetime.now() + delta
    now_next = datetime.now() + delta + delta1
    days_int = now.isoweekday()
    
    sep = datetime(now.year if now.month >= 9 else now.year - 1, 9, 1)
    d1 = sep - timedelta(days = sep.weekday())
    d2 = now - timedelta(days = now.weekday())
    parity = ((d2 - d1).days // 7) % 2 #–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 0, –µ—Å–ª–∏ –Ω–µ–¥–µ–ª—è –Ω–µ—á—ë—Ç–Ω–∞—è –∏ 1, –µ—Å–ª–∏ —á—ë—Ç–Ω–∞—è
    
    if days_int == 7:
        days_print = 0
        if parity == 0:
            parity = 1
        else:
            parity = 0
    else:
        days_print = days_int
    
        
    if parity == 0:
        schedule_days_int = json_data3["–î–ª—è –Ω–µ—á—ë—Ç–Ω–æ–π –Ω–µ–¥–µ–ª–∏"]
        schedule = ''
        for x in schedule_days_int:
            keys = schedule_days_int.get(str(days_print))
        nowtime = now_next.strftime("(%d.%m.%y)")
        schedule += str(keys)
        schedule = schedule.replace("['", '').replace("']", '').replace(r'\n', '\n').replace("', '", '').replace('()', nowtime)
        if remotely == 1:
            schedule = re.sub("\d\d\d", "–î–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ", schedule)
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard = True)
        button = types.KeyboardButton(text = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è")
        button1 = types.KeyboardButton(text = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞")
        button2 = types.KeyboardButton(text = "–û –Ω–∞—Å")
        button3 = types.KeyboardButton(text = "–ü–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
        keyboard.row(button, button1)
        keyboard.row(button2, button3)
        bot.send_message(message.chat.id, schedule, parse_mode = 'Markdown', reply_markup = keyboard)
    else:
        schedule_days_int = json_data3["–î–ª—è —á—ë—Ç–Ω–æ–π –Ω–µ–¥–µ–ª–∏"]
        schedule = ''
        for x in schedule_days_int:
            keys = schedule_days_int.get(str(days_print))
        nowtime = now_next.strftime("(%d.%m.%y)")
        schedule += str(keys)
        schedule = schedule.replace("['", '').replace("']", '').replace(r'\n', '\n').replace("', '", '').replace('()', nowtime)
        if remotely == 1:
            schedule = re.sub("\d\d\d", "–î–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ", schedule)
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard = True)
        button = types.KeyboardButton(text = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è")
        button1 = types.KeyboardButton(text = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞")
        button2 = types.KeyboardButton(text = "–û –Ω–∞—Å")
        button3 = types.KeyboardButton(text = "–ü–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
        keyboard.row(button, button1)
        keyboard.row(button2, button3)
        bot.send_message(message.chat.id, schedule, parse_mode = 'Markdown', reply_markup = keyboard)


@bot.message_handler(content_types = ['text'])
def text(message):
    if message.text.lower() == '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è':
        delta = timedelta(hours = 3)
        now = datetime.now() + delta
        days_int = now.isoweekday()
        
        sep = datetime(now.year if now.month >= 9 else now.year - 1, 9, 1)
        d1 = sep - timedelta(days = sep.weekday())
        d2 = now - timedelta(days = now.weekday())
        parity = ((d2 - d1).days // 7) % 2 #–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 0, –µ—Å–ª–∏ –Ω–µ–¥–µ–ª—è –Ω–µ—á—ë—Ç–Ω–∞—è –∏ 1, –µ—Å–ª–∏ —á—ë—Ç–Ω–∞—è
        
        if parity == 0:
            schedule_days_int = json_data["–î–ª—è –Ω–µ—á—ë—Ç–Ω–æ–π –Ω–µ–¥–µ–ª–∏"]
            schedule = ''
            for x in schedule_days_int:
                keys = schedule_days_int.get(str(days_int))
            nowtime = now.strftime("(%d.%m.%y)")
            schedule += str(keys)
            schedule = schedule.replace("['", '').replace("']", '').replace(r'\n', '\n').replace("', '", '').replace('()', nowtime)
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard = True)
            button = types.KeyboardButton(text = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è")
            button1 = types.KeyboardButton(text = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞")
            button2 = types.KeyboardButton(text = "–û –Ω–∞—Å")
            button3 = types.KeyboardButton(text = "–ü–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
            keyboard.row(button, button1)
            keyboard.row(button2, button3)
            bot.send_message(message.chat.id, schedule, parse_mode = 'Markdown', reply_markup = keyboard)
        else:
            schedule_days_int = json_data["–î–ª—è —á—ë—Ç–Ω–æ–π –Ω–µ–¥–µ–ª–∏"]
            schedule = ''
            for x in schedule_days_int:
                keys = schedule_days_int.get(str(days_int))
            nowtime = now.strftime("(%d.%m.%y)")
            schedule += str(keys)
            schedule = schedule.replace("['", '').replace("']", '').replace(r'\n', '\n').replace("', '", '').replace('()', nowtime)
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard = True)
            button = types.KeyboardButton(text = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è")
            button1 = types.KeyboardButton(text = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞")
            button2 = types.KeyboardButton(text = "–û –Ω–∞—Å")
            button3 = types.KeyboardButton(text = "–ü–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
            keyboard.row(button, button1)
            keyboard.row(button2, button3)
            bot.send_message(message.chat.id, schedule, parse_mode = 'Markdown', reply_markup = keyboard)
    elif message.text.lower() == '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞':
        delta = timedelta(hours = 3)
        delta1 = timedelta(days = 1)
        now = datetime.now() + delta
        now_next = datetime.now() + delta + delta1
        days_int = now.isoweekday()
        
        sep = datetime(now.year if now.month >= 9 else now.year - 1, 9, 1)
        d1 = sep - timedelta(days = sep.weekday())
        d2 = now - timedelta(days = now.weekday())
        parity = ((d2 - d1).days // 7) % 2 #–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 0, –µ—Å–ª–∏ –Ω–µ–¥–µ–ª—è –Ω–µ—á—ë—Ç–Ω–∞—è –∏ 1, –µ—Å–ª–∏ —á—ë—Ç–Ω–∞—è
        
        if days_int == 7:
            days_print = 0
            if parity == 0:
                parity = 1
            else:
                parity = 0
        else:
            days_print = days_int
        
        
        if parity == 0:
            schedule_days_int = json_data3["–î–ª—è –Ω–µ—á—ë—Ç–Ω–æ–π –Ω–µ–¥–µ–ª–∏"]
            schedule = ''
            for x in schedule_days_int:
                keys = schedule_days_int.get(str(days_print))
            nowtime = now_next.strftime("(%d.%m.%y)")
            schedule += str(keys)
            schedule = schedule.replace("['", '').replace("']", '').replace(r'\n', '\n').replace("', '", '').replace('()', nowtime)
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard = True)
            button = types.KeyboardButton(text = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è")
            button1 = types.KeyboardButton(text = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞")
            button2 = types.KeyboardButton(text = "–û –Ω–∞—Å")
            button3 = types.KeyboardButton(text = "–ü–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
            keyboard.row(button, button1)
            keyboard.row(button2, button3)
            bot.send_message(message.chat.id, schedule, parse_mode = 'Markdown', reply_markup = keyboard)
        else:
            schedule_days_int = json_data3["–î–ª—è —á—ë—Ç–Ω–æ–π –Ω–µ–¥–µ–ª–∏"]
            schedule = ''
            for x in schedule_days_int:
                keys = schedule_days_int.get(str(days_print))
            nowtime = now_next.strftime("(%d.%m.%y)")
            schedule += str(keys)
            schedule = schedule.replace("['", '').replace("']", '').replace(r'\n', '\n').replace("', '", '').replace('()', nowtime)
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard = True)
            button = types.KeyboardButton(text = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è")
            button1 = types.KeyboardButton(text = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞")
            button2 = types.KeyboardButton(text = "–û –Ω–∞—Å")
            button3 = types.KeyboardButton(text = "–ü–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
            keyboard.row(button, button1)
            keyboard.row(button2, button3)
            bot.send_message(message.chat.id, schedule, parse_mode = 'Markdown', reply_markup = keyboard)
    elif message.text.lower() == '–æ –Ω–∞—Å':
        keyboard = types.InlineKeyboardMarkup()
        button = types.InlineKeyboardButton(text = "üìù –ù–∞–ø–∏—Å–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É", url = 'https://t.me/ppippette')
        keyboard.add(button)
        bot.send_message(message.chat.id, '*–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞* \n\nüßë‚Äçüíª *–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:* @ppippette \nüõ† *–¢–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫:* @whomet \nüëâ *–ù–∞—à Github:* https://github.com/GRTUBORG/isip-42 \n\n‚Ä¢ –û–±–æ –≤—Å–µ—Ö _–æ—à–∏–±–∫–∞—Ö_, _–ø—Ä–æ–±–ª–µ–º–∞—Ö_ –∏ –í–∞—à–∏—Ö _–≥–µ–Ω–∏–∞–ª—å–Ω—ã—Ö –∏–¥–µ—è—Ö_ –ø—Ä–æ—Å—å–±–∞ –ø–∏—Å–∞—Ç—å *—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É* ‚úçÔ∏è \n‚Ä¢ *–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±—ã–ª–æ:* 17.01.22, v. 2.0', parse_mode = 'Markdown', reply_markup = keyboard)
    elif message.text.lower() == '–ø–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ':
        even_numbered_week = open('./Schedule/–ò–°–∏–ü-42. –ß—ë—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è.pdf', 'rb')
        odd_week = open('./Schedule/–ò–°–∏–ü-42. –ù–µ—á—ë—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è.pdf', 'rb')
        bot.send_message(message.chat.id, 'üìã –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ *—á—ë—Ç–Ω—É—é* –Ω–µ–¥–µ–ª—é:', parse_mode = 'Markdown')
        bot.send_document(message.chat.id, even_numbered_week)
        bot.send_message(message.chat.id, 'üìã –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ *–Ω–µ—á—ë—Ç–Ω—É—é* –Ω–µ–¥–µ–ª—é:', parse_mode = 'Markdown')
        bot.send_document(message.chat.id, odd_week)
        even_numbered_week.close()
        odd_week.close()

if __name__ == '__main__':
    while True:
        try:
            bot.polling(none_stop = True)
        except Exception as e:
            time.sleep(3)
            print(f'–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞: {e}')
